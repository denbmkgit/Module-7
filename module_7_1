from pprint import pprint

class Product:
    def __init__(self, name=str, weight=float, category=str):
        self.name = name
        self. weight = weight
        self.category = category

    def __str__(self):
        return f' {self.name}, {self.weight}, {self.category}'

class Shop():
    # def __init__(self):
    #     self.__file_name = 'products.txt'
    __file_name = 'products.txt'

    def get_products(self):
        file_for_read = open(self.__file_name, 'r')
        outputting = file_for_read.read()
        file_for_read.close()

        return  outputting #(pprint(file_for_read.read()), file_for_read.close())#, print('it is get_products - file for read')),
                 #file_for_read.close, print('it is get_products - close'), print('it is get_products = return'))



    def add(self, *products):
        for product in products:
            # print(product.name, '          it is product.name')
            if product.name not in self.get_products(): # and str(product.weight) not in self.get_products():
                # print(self.get_products(), 'it is from get products', str(product.weight), type(str(product.weight)))
                file = open(self.__file_name, 'a')
                file.write(product.__str__() + '\n')
                #file_for_append.close()

            else:
                print(f'Продукт {product} уже есть в магазине')


s1 = Shop()
p1 = Product('Potato', 50.5, 'Vegetables')
p2 = Product('Spaghetti', 3.4, 'Groceries')
p3 = Product('Potato', 5.5, 'Vegetables')

print(p2) # __str__

s1.add(p1, p2, p3)

print(s1.get_products())


# sh = Shop()
# print('test')
# print(s1.get_products())
#pr = Product('beef', 10.0, 'meet')
# print(pr.__str__())
